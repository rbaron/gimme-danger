substitutions:
  gimme_danger_device_id: "2"

packages:
  common: !include common/gimme-danger.yaml

fusb302:
  id: fusb302_id
  # Safe default. Will be changed on button press.
  voltage: 5000 mV
  current: 500 mA

display:
  - id: oled_display
    platform: ssd1306_i2c
    i2c_id: i2c_bus_ina
    model: "SSD1306 128x32"
    address: 0x3C
    update_interval: 100ms
    pages:
      - id: screen_state
        lambda: |-
          it.printf(0, 0, id(font_small), TextAlign::TOP_LEFT, "VSET");
          it.printf(0, it.get_height() + 4, id(font_large), TextAlign::BOTTOM_LEFT, "%3.1fV", id(voltage_selector).state);
          it.printf(it.get_width(), 0, id(font_small), TextAlign::TOP_RIGHT, "VBUS");
          it.printf(it.get_width(), it.get_height() + 4, id(font_large), TextAlign::BOTTOM_RIGHT, "%3.1fV", id(ina219_load_voltage).state);

font:
  - file: "gfonts://Ubuntu+Mono"
    id: font_small
    size: 14
  - file: "gfonts://Ubuntu+Mono"
    id: font_large
    size: 24

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      inverted: True
      mode:
        input: true
        pullup: true
    name: Boot Button
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_press:
      then:
        - fusb302.set_voltage_requirement:
            id: fusb302_id
            voltage: !lambda |-
              ESP_LOGW("Button Press", "Will set voltage to %.2f", id(voltage_selector).state);
              return id(voltage_selector).state;

sensor:
  - platform: adc
    id: voltage_selector
    pin: GPIO8
    name: "Voltage Selector"
    update_interval: 50ms
    attenuation: auto
    filters:
      - sliding_window_moving_average:
          window_size: 5
          send_every: 5
      - calibrate_linear:
          - 0.0 -> 3.3
          - 3.1 -> 22.0
      - clamp:
          min_value: 4.0
          max_value: 21.0
      - round: 1
