esphome:
  name: gimmedanger1
  friendly_name: Gimme Danger!! 1

esp32:
  board: esp32-s3-devkitc-1
  flash_size: 4MB
  # framework:
  #   type: esp-idf
  # #   version: recommended

# api:
#   encryption:
#     key: !secret homeassistant_enc_key

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  enable_on_boot: true

i2c:
  sda: GPIO8
  scl: GPIO9
  scan: False
  id: i2c_bus
  frequency: 100kHz
  # frequency: 500kHz
  # frequency: 200kHz
  # frequency: 10kHz
  # frequency: 1000kHz

# Enable logging
logger:
  # level: VERBOSE
  # By default, ESP32-S3 uses USB-CDC for logging.
  hardware_uart: UART0
  level: WARN
  # level: ERROR
  # logs:
  #   ledc.output: WARN
  #   light: WARN
  #   api: WARN
  #   api.connection: WARN
  #   logger: WARN
  #   ota: WARN
  #   wifi: WARN
  #   i2c.arduino: WARN
  #   app: WARN
  #   sensor: WARN
  #   ina219: WARN
  #   esp2.preferences: WARN
  # # sensor: WARN

# logger:
#   # By default, ESP32-S3 uses USB-CDC for logging.
#   hardware_uart: UART0
#   level: ERROR

output:
  - platform: gpio
    pin:
      number: 13
      mode: output
    id: yellow_led
  - platform: gpio
    pin:
      number: 14
      mode: output
    id: red_led
  # - platform: ledc
  #   id: output_ch1
  #   pin: GPIO48
  # - platform: ledc
  #   id: output_ch2
  #   pin: GPIO47
  # - platform: ledc
  #   id: output_ch3
  #   pin: GPIO21
  # - platform: ledc
  #   id: output_ch4
  #   pin: GPIO38
  - platform: gpio
    id: output_ch1
    pin: GPIO48

switch:
  - platform: gpio
    pin: GPIO12
    id: load_switch

sensor:
  # - platform: adc
  #   name: "Vout Voltage"
  #   attenuation: 11db
  #   pin: GPIO2
  #   filters:
  #     # Account for 1/11 voltage divider.
  #     - multiply: 11.0
  # - platform: ina219
  #   address: 0x40
  #   shunt_resistance: 0.01 ohm
  #   current:
  #     name: "Current"
  #   power:
  #     name: "Power"
  #   bus_voltage:
  #     name: "Load Voltage"
  #   shunt_voltage:
  #     name: "Shunt Voltage"
  #   max_voltage: 28.0V
  #   max_current: 5A
  #   update_interval: 500ms

fusb302:
  # interrupt_pin: GPIO10
  voltage: 11000 mV
  # voltage: 12000 mV
  current: 1000 mA
  on_pd_negotiation_success:
    then:
      - output.turn_on: yellow_led
      - output.turn_off: red_led
      - switch.turn_on: load_switch
      - lambda: |-
          ESP_LOGW("fusb302_trigger", "PD negotiation success outcome: %d", success);
      # - wifi.enable
  on_pd_negotiation_failure:
    then:
      - output.turn_off: yellow_led
      - output.turn_on: red_led
      - switch.turn_off: load_switch
      - lambda: |-
          ESP_LOGW("fusb302_trigger", "PD negotiation failure outcome: %d", success);
      # - wifi.enable

# light:
#   # - platform: rgbw
#   #   # restore_mode: RESTORE_DEFAULT_OFF
#   #   name: LED Strip
#   #   red: output_ch1
#   #   green: output_ch2
#   #   blue: output_ch3
#   #   white: output_ch4

#   - platform: monochromatic
#     name: Light Channel 1
#     id: light_ch1
#     output: output_ch1

# effects:
#   flicker:
# - platform: monochromatic
#   name: Light Channel 2
#   id: light_ch2
#   output: output_ch2
#   effects:
#     flicker:
# - platform: monochromatic
#   name: Light Channel 3
#   id: light_ch3
#   output: output_ch3
#   effects:
#     flicker:
# - platform: monochromatic
#   name: Light Channel 4
#   id: light_ch4
#   output: output_ch4
#   effects:
#     flicker:

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      inverted: True
      mode:
        input: true
        pullup: true
    name: Boot Button
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_press:
      then:
        - logger.log: "Boot button pressed!"
        - output.turn_on: output_ch1
